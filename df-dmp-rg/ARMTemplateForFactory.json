{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "df-dmp-rg"
		},
		"AzureSqlDatabase1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase1'"
		},
		"LS_RFM_DEVL_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_RFM_DEVL'"
		},
		"LS_blb_input_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_blb_input'"
		},
		"LS_raw_data_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'LS_raw_data'"
		},
		"LS_rfmSQLDatabase_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_rfmSQLDatabase'"
		},
		"LS_raw_data_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://datalake2022.dfs.core.windows.net"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pl-df_example1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "df_test1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_test1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"RFMCSVFile": {},
									"RFMOutFile": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_test1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl-rfm_copyprojectcsv')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copies OS project data from csv file to Azure SQL table",
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "OS_Project_Overview_ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OSProjectKey",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "OS_Scenario_ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OSScenarioId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Project_Flag",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ProjectFlag",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Year_Submitted",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "YearSubmitted",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Project_Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ProjectName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "OSR_Project_Number",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OSRNumber",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Operator",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Operator",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Project_Area_Region",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ProjectAreaRegion",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Scenario",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Scenario",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Phase",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Phase",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Technology",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Technology",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Density",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Density",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 4,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Sulphur",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Sulphur",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TAN",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TAN",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Net_Cumulative_Balance",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "NetCumulativeBalance",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 4,
											"precision": 19
										}
									},
									{
										"source": {
											"name": "Capacity_Bitumen",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BitumenCapacity",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 1,
											"precision": 16
										}
									},
									{
										"source": {
											"name": "Capacity_Steam",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "StreamCapacity",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 1,
											"precision": 16
										}
									},
									{
										"source": {
											"name": "Project_Status",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ProjectStatus",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Project_Suspended/Cancelled/Deferred",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Project_SusCancDeffered",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Project_Indefinitely",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ProjectIndefinitely",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Project_Source",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ProjectSource",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Deleted",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Deleted",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "DeletedDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DeletedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "AdditionalNotes",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AdditionalNotes",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ProjectPayoutDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ProjectPayoutDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_input_csvosprojects",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "LS_Destination_Db",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_input_csvosprojects')]",
				"[concat(variables('factoryId'), '/datasets/LS_Destination_Db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl-rfm_copyprojectparquet')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copies OS project data from csv file to Azure SQL table",
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "OS_Project_Overview_ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OSProjectKey",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "OS_Scenario_ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OSScenarioId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Project_Flag",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ProjectFlag",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Year_Submitted",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "YearSubmitted",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Project_Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ProjectName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "OSR_Project_Number",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OSRNumber",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Operator",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Operator",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Project_Area_Region",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ProjectAreaRegion",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Scenario",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Scenario",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Phase",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Phase",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Technology",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Technology",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Density",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Density",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 4,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Sulphur",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Sulphur",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TAN",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TAN",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Net_Cumulative_Balance",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "NetCumulativeBalance",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 4,
											"precision": 19
										}
									},
									{
										"source": {
											"name": "Capacity_Bitumen",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BitumenCapacity",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 1,
											"precision": 16
										}
									},
									{
										"source": {
											"name": "Capacity_Steam",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "StreamCapacity",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 1,
											"precision": 16
										}
									},
									{
										"source": {
											"name": "Project_Status",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ProjectStatus",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Project_Suspended/Cancelled/Deferred",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Project_SusCancDeffered",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Project_Indefinitely",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ProjectIndefinitely",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Project_Source",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ProjectSource",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Deleted",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Deleted",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "DeletedDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DeletedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "AdditionalNotes",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AdditionalNotes",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ProjectPayoutDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ProjectPayoutDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_input_parquetosprojects",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "LS_Destination_Db",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_input_parquetosprojects')]",
				"[concat(variables('factoryId'), '/datasets/LS_Destination_Db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_rfm_copy_alltables')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copy all tables data from RFM database to datastore",
				"activities": [
					{
						"name": "Get Table List",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_rfm_tablelist",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "For each table",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Table List",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Table List').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy Table Data",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "SQLTable",
											"type": "DatasetReference",
											"parameters": {
												"TableName": {
													"value": "@item().Table_Name",
													"type": "Expression"
												},
												"SchemaName": {
													"value": "@item().TABLE_SCHEMA",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "CSVTable",
											"type": "DatasetReference",
											"parameters": {
												"FileName": {
													"value": "@concat(item().table_schema,'_',item().table_name,'.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_rfm_tablelist')]",
				"[concat(variables('factoryId'), '/datasets/SQLTable')]",
				"[concat(variables('factoryId'), '/datasets/CSVTable')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_rfm_copy_alltables_parquet')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copy all tables data from RFM database to datastore",
				"activities": [
					{
						"name": "Get Table List",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_rfm_tablelist",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "For each table",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Table List",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Table List').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy Table Data",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "SQLTable",
											"type": "DatasetReference",
											"parameters": {
												"TableName": {
													"value": "@item().Table_Name",
													"type": "Expression"
												},
												"SchemaName": {
													"value": "@item().TABLE_SCHEMA",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ParquetTable",
											"type": "DatasetReference",
											"parameters": {
												"FileName": {
													"value": "@concat(item().table_schema,'_',item().table_name,'.parquet')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_rfm_tablelist')]",
				"[concat(variables('factoryId'), '/datasets/SQLTable')]",
				"[concat(variables('factoryId'), '/datasets/ParquetTable')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CSVTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_raw_data",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": "rfm/csv",
						"fileSystem": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_raw_data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_Destination_Db')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "OSProjectKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "OSScenarioId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ProjectFlag",
						"type": "bit"
					},
					{
						"name": "YearSubmitted",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ProjectName",
						"type": "varchar"
					},
					{
						"name": "OSRNumber",
						"type": "varchar"
					},
					{
						"name": "Operator",
						"type": "varchar"
					},
					{
						"name": "ProjectAreaRegion",
						"type": "varchar"
					},
					{
						"name": "Scenario",
						"type": "varchar"
					},
					{
						"name": "Phase",
						"type": "varchar"
					},
					{
						"name": "Technology",
						"type": "varchar"
					},
					{
						"name": "Density",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "Sulphur",
						"type": "decimal",
						"precision": 6,
						"scale": 4
					},
					{
						"name": "TAN",
						"type": "decimal",
						"precision": 5,
						"scale": 2
					},
					{
						"name": "NetCumulativeBalance",
						"type": "decimal",
						"precision": 13,
						"scale": 2
					},
					{
						"name": "BitumenCapacity",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "StreamCapacity",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "ProjectStatus",
						"type": "varchar"
					},
					{
						"name": "Project_SusCancDeffered",
						"type": "bit"
					},
					{
						"name": "ProjectIndefinitely",
						"type": "bit"
					},
					{
						"name": "ProjectSource",
						"type": "bit"
					},
					{
						"name": "Deleted",
						"type": "bit"
					},
					{
						"name": "DeletedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "AdditionalNotes",
						"type": "varchar"
					},
					{
						"name": "ProjectPayoutDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "OSProjects"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ParquetTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_raw_data",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": "rfm/parquet",
						"fileSystem": "raw"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_raw_data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_RFM_DEVL",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"TableName": {
						"type": "string"
					},
					"SchemaName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().SchemaName",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().TableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_RFM_DEVL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_input')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_raw_data",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "dbo_ParPrice.csv",
						"folderPath": "rfm/csv",
						"fileSystem": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_raw_data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_input_csvosprojects')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_raw_data",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "dbo__OS_Project.csv",
						"folderPath": "rfm/csv",
						"fileSystem": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_raw_data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_input_parquetosprojects')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_raw_data",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "dbo__OS_Project.parquet",
						"folderPath": "rfm/parquet",
						"fileSystem": "raw"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "OS_Project_Overview_ID",
						"type": "INT32"
					},
					{
						"name": "OS_Scenario_ID",
						"type": "INT32"
					},
					{
						"name": "Project_Flag",
						"type": "UTF8"
					},
					{
						"name": "Year_Submitted",
						"type": "INT32"
					},
					{
						"name": "Project_Name",
						"type": "UTF8"
					},
					{
						"name": "OSR_Project_Number",
						"type": "UTF8"
					},
					{
						"name": "Operator",
						"type": "UTF8"
					},
					{
						"name": "Project_Area_Region",
						"type": "UTF8"
					},
					{
						"name": "Scenario",
						"type": "UTF8"
					},
					{
						"name": "Phase",
						"type": "UTF8"
					},
					{
						"name": "Technology",
						"type": "UTF8"
					},
					{
						"name": "Density",
						"type": "DECIMAL",
						"precision": 18,
						"scale": 12
					},
					{
						"name": "Sulphur",
						"type": "UTF8"
					},
					{
						"name": "TAN",
						"type": "UTF8"
					},
					{
						"name": "Net_Cumulative_Balance",
						"type": "DECIMAL",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "Capacity_Bitumen",
						"type": "DECIMAL",
						"precision": 16,
						"scale": 1
					},
					{
						"name": "Capacity_Steam",
						"type": "DECIMAL",
						"precision": 16,
						"scale": 1
					},
					{
						"name": "Project_Status",
						"type": "UTF8"
					},
					{
						"name": "Project_Suspended/Cancelled/Deferred",
						"type": "UTF8"
					},
					{
						"name": "Project_Indefinitely",
						"type": "UTF8"
					},
					{
						"name": "Project_Source",
						"type": "UTF8"
					},
					{
						"name": "Deleted",
						"type": "BOOLEAN"
					},
					{
						"name": "DeletedDate",
						"type": "INT96"
					},
					{
						"name": "AdditionalNotes",
						"type": "UTF8"
					},
					{
						"name": "ProjectPayoutDate",
						"type": "INT96"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_raw_data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_output')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_blb_input",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "incoming"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_blb_input')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_rfm_tablelist')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_RFM_DEVL",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_RFM_DEVL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_RFM_DEVL')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "RFM DEVL Linked service",
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('LS_RFM_DEVL_connectionString')]"
				},
				"connectVia": {
					"referenceName": "SelfHostedIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SelfHostedIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_blb_input')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('LS_blb_input_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_raw_data')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LS_raw_data_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('LS_raw_data_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_rfmSQLDatabase')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlMI",
				"typeProperties": {
					"connectionString": "[parameters('LS_rfmSQLDatabase_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SelfHostedIntegrationRuntime')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_test1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_input",
								"type": "DatasetReference"
							},
							"name": "RFMCSVFile"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_output",
								"type": "DatasetReference"
							},
							"name": "RFMOutFile"
						}
					],
					"transformations": [
						{
							"name": "Select1"
						}
					],
					"script": "source(output(\n\t\tProductionPeriod as timestamp,\n\t\t{ParPrice_L_CAD/m3} as double,\n\t\t{ParPrice_M_CAD/m3} as double,\n\t\t{ParPrice_H_CAD/m3} as double,\n\t\t{ParPrice_UH_CAD/m3} as double,\n\t\t{C2RefPriceSpec_CAD/GJ} as double,\n\t\t{C3RefPriceMix_CAD/M3} as double,\n\t\t{C4RefPriceMix_CAD/M3} as double,\n\t\t{C5RefPriceMix_CAD/M3} as double,\n\t\t{C3RefPriceSpec_CAD/M3} as double,\n\t\t{C4RefPriceSpec_CAD/M3} as double,\n\t\t{C5RefPriceSpec_CAD/M3} as double,\n\t\tSysStartTime as string,\n\t\tSysEndTime as string,\n\t\t{C1ARP_CAD/GJ} as double\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> RFMCSVFile\nRFMCSVFile select(mapColumn(\n\t\tProductionPeriod,\n\t\tParPrice_L_CAD_m3 = {ParPrice_L_CAD/m3},\n\t\tParPrice_M_CAD_m3 = {ParPrice_M_CAD/m3},\n\t\tParPrice_H_CAD_m3 = {ParPrice_H_CAD/m3},\n\t\tParPrice_UH_CAD_m3 = {ParPrice_UH_CAD/m3},\n\t\tC2RefPriceSpec_CAD_GJ = {C2RefPriceSpec_CAD/GJ},\n\t\tC3RefPriceMix_CAD_M3 = {C3RefPriceMix_CAD/M3},\n\t\tC4RefPriceMix_CAD_M3 = {C4RefPriceMix_CAD/M3},\n\t\tC5RefPriceMix_CAD_M3 = {C5RefPriceMix_CAD/M3},\n\t\tC3RefPriceSpec_CAD_M3 = {C3RefPriceSpec_CAD/M3},\n\t\tC4RefPriceSpec_CAD_M3 = {C4RefPriceSpec_CAD/M3},\n\t\tC5RefPriceSpec_CAD_M3 = {C5RefPriceSpec_CAD/M3},\n\t\tC1ARP_CAD_GJ = {C1ARP_CAD/GJ}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['ParPrice.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> RFMOutFile"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_input')]",
				"[concat(variables('factoryId'), '/datasets/ds_output')]"
			]
		}
	]
}